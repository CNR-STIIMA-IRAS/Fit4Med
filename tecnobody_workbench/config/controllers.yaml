tecnobody_controller_manager:
  ros__parameters:
    update_rate: 1000 # Hz

    forward_velocity_controller:
      type: velocity_controllers/JointGroupVelocityController

    forward_position_controller:
      type: position_controllers/JointGroupPositionController

    forward_command_controller:
      type: forward_command_controller/ForwardCommandController

    joint_state_broadcaster:
      type: joint_state_broadcaster/JointStateBroadcaster

    joint_trajectory_controller:
      type: "joint_trajectory_controller/JointTrajectoryController"

    scaled_trajectory_controller:
      type: "scaled_fjt_controller/ScaledFjtController"

    state_controller:
      type: ethercat_controllers/CiA402Controller

    admittance_controller:
      type: "admittance_controller/AdmittanceController"

    controller_logger:
      type: controller_logger/ControllerLogger

controller_logger:
  ros__parameters:
    interfaces: ["joint_1/position", "joint_2/position", "joint_3/position"]

forward_velocity_controller:
  ros__parameters:
    joints:
      - joint_1
      - joint_2
      - joint_3
    command_interface:
      - velocity

forward_position_controller:
  ros__parameters:
    joints:
      - joint_1
      - joint_2
      - joint_3
    command_interface:
      - position

forward_command_controller:
  ros__parameters:
    joints:
      - joint_1
      - joint_2
      - joint_3
    interface_name: position

state_controller:
  ros__parameters:
    dofs:
      - joint_1
      - joint_2
      - joint_3

joint_trajectory_controller:
  ros__parameters:
    joints:
      - joint_1
      - joint_2
      - joint_3

    command_interfaces:
      - position

    state_interfaces:
      - position
      - velocity

scaled_trajectory_controller:
  ros__parameters:
    joints:
      - joint_1
      - joint_2
      - joint_3
    command_interfaces:
      - position
    state_interfaces:
      - position
      - velocity
    open_loop_control: true
    constraints:
      goal_time: 0.0
    spline_order: 3 #Manuel ha detto di fare un prova aggiungendo il parametro spline_order: 3
  # action_monitor_rate: 20.0
  # allow_partial_joints_goal: true
  # open_loop_control: false
  # constraints:
  #   stopped_velocity_tolerance: 0.01
  #   goal_time: 0.0
  #   joint_0:
  #     trajectory: 0.05
  #     goal: 0.03
  #   joint_1:
  #     trajectory: 0.05
  #     goal: 0.03
  # gains:
  #   joint_1:
  #     p: 2.0
  #     i: 0.0
  #     d: 0.0
  #     i_clamp: 30000.0
  #     ff_velocity_scale: 0.1
  #   joint_2:
  #     p: 2.0
  #     i: 0.0
  #     d: 0.0
  #     i_clamp: 30000.0
  #     ff_velocity_scale: 0.1
  #   joint_3:
  #     p: 2.0
  #     i: 0.0
  #     d: 0.0
  #     i_clamp: 30000.0
  #     ff_velocity_scale: 0.1

admittance_controller:
  ros__parameters:
    joints:
      - joint_1
      - joint_2
      - joint_3
    command_interfaces:
      - position

    state_interfaces:
      - position
      - velocity

    chainable_command_interfaces:
      - position
      - velocity

    kinematics:
      plugin_name: kinematics_interface_kdl/KinematicsInterfaceKDL
      plugin_package: kinematics_interface # Just install this package (if not working with debian add it to your workspace)
      base: base_link # Assumed to be stationary
      tip: ee_link
      group_name: manipulator
      alpha: 0.0005

    ft_sensor:
      name: ft_sensor # Sensor name
      frame:
        id: ee_link # Wrench measurements are in this frame
        external: false # force torque frame exists within URDF kinematic chain
      filter_coefficient: 0.005

    control:
      frame:
        id: base_link # Admittance calcs (displacement etc) are done in this frame. Usually the tool or end-effector
        external: false # control frame exists within URDF kinematic chain

    fixed_world_frame:
      # Gravity points down (neg. Z) in this frame (Usually: world or base_link)
      frame:
        id: base_link # Admittance calcs (displacement etc) are done in this frame. Usually the tool or end-effector
        external: false # control frame exists within URDF kinematic chain

    gravity_compensation:
      frame:
        id: ee_link
        external: false

      CoG:
        # specifies the center of gravity of the end effector
        pos:
          - 0.001 # x
          - 0.2 # y
          - 0.142 # z
        force: 10.0 #9.81 # mass * 9.81

    admittance:
      selected_axes:
        - false # x
        - false # y
        - true # z
        - false # rx
        - false # ry
        - false # rz
      # Having ".0" at the end is MUST, otherwise there is a loading error
      # F = M*a + D*v + S*(x - x_d)
      mass:
        - 5.5
        - 6.6
        - 2.0
        - 8.8
        - 9.9
        - 10.10

      damping_ratio:
        # damping can be used instead: zeta = D / (2 * sqrt( M * S ))
        - 2.828427 # x
        - 2.828427 # y
        - 2.828427 # z
        - 2.828427 # rx
        - 2.828427 # ry
        - 2.828427 # rz

      stiffness:
        - 214.4
        - 214.4
        - 10.0
        - 214.4
        - 214.5
        - 214.6
